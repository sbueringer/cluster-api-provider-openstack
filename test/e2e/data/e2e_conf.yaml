---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - openstack

# To run tests, run the following from the root of this repository.
# FIXME: `AWS_REGION=eu-west-1 make e2e GINKGO_ARGS=-stream E2E_ARGS=-skip-cloudformation-deletion`
# The -stream flag will make Ginkgo print results to the screen in real-time.

images:
- name: gcr.io/k8s-staging-cluster-api/cluster-api-controller:nightly_master_20210220
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-bootstrap-controller:nightly_master_20210220
  loadBehavior: tryLoad
- name: gcr.io/k8s-staging-cluster-api/kubeadm-control-plane-controller:nightly_master_20210220
  loadBehavior: tryLoad
# Use local dev images built source tree;
- name: gcr.io/k8s-staging-capi-openstack/capi-openstack-controller-amd64:e2e
  loadBehavior: mustLoad
- name: quay.io/jetstack/cert-manager-cainjector:v1.1.0
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-webhook:v1.1.0
  loadBehavior: tryLoad
- name: quay.io/jetstack/cert-manager-controller:v1.1.0
  loadBehavior: tryLoad

providers:
# diff against another provider (not aws)
- name: cluster-api
  type: CoreProvider
  versions:
  - name: v0.4.0
  # Use manifest from source files
    value: "https://storage.googleapis.com/artifacts.k8s-staging-cluster-api.appspot.com/components/nightly_master_20210220/core-components.yaml"
    type: "url"
    files:
    - sourcePath: "./shared/v1alpha4/metadata.yaml"
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--leader-elect"
      new: "--leader-elect=false"
    - old: --metrics-bind-addr=127.0.0.1:8080
      new: --metrics-bind-addr=:8080

- name: kubeadm
  type: BootstrapProvider
  versions:
  - name: v0.4.0
  # Use manifest from source files
    value: "https://storage.googleapis.com/artifacts.k8s-staging-cluster-api.appspot.com/components/nightly_master_20210220/bootstrap-components.yaml"
    type: "url"
    files:
    - sourcePath: "./shared/v1alpha4/metadata.yaml"
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--leader-elect"
      new: "--leader-elect=false"
    - old: --metrics-bind-addr=127.0.0.1:8080
      new: --metrics-bind-addr=:8080

- name: kubeadm
  type: ControlPlaneProvider
  versions:
  - name: v0.4.0
  # Use manifest from source files
    value: "https://storage.googleapis.com/artifacts.k8s-staging-cluster-api.appspot.com/components/nightly_master_20210220/control-plane-components.yaml"
    type: "url"
    replacements:
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--leader-elect"
      new: "--leader-elect=false"
    - old: --metrics-bind-addr=127.0.0.1:8080
      new: --metrics-bind-addr=:8080
    files:
    - sourcePath: "./shared/v1alpha4/metadata.yaml"

- name: openstack
  type: InfrastructureProvider
  versions:
  - name: v0.4.0
  # Use manifest from source files
    value: ../../../config/default
    replacements: #FIXME: drop image pull patch?
    - old: "imagePullPolicy: Always"
      new: "imagePullPolicy: IfNotPresent"
    - old: "--leader-elect"
      new: "--leader-elect=false"
    - old: --metrics-bind-addr=127.0.0.1:8080
      new: --metrics-bind-addr=:8080
    - old: gcr.io/k8s-staging-capi-openstack/capi-openstack-controller-amd64:dev
      new: gcr.io/k8s-staging-capi-openstack/capi-openstack-controller-amd64:e2e
    files:
    # Add a cluster template
    # FIXME: fix all paths
    - sourcePath: "./shared/v1alpha4/metadata.yaml"
    - sourcePath: "./infrastructure-aws/cluster-template.yaml"
    - sourcePath: "./infrastructure-aws/cluster-template-multi-az.yaml"
    - sourcePath: "./infrastructure-aws/cluster-template-limit-az.yaml"

variables:
  # default variables for the e2e test; those values could be overridden via env variables, thus
  # allowing the same e2e config file to be re-used in different prow jobs e.g. each one with a K8s version permutation
  # FIXME:
  KUBERNETES_VERSION: "v1.19.4"
  CNI: "../../data/cni/calico.yaml"
  EXP_CLUSTER_RESOURCE_SET: "true"
  AWS_CONTROL_PLANE_MACHINE_TYPE: t3.large
  AWS_NODE_MACHINE_TYPE: t3.large
  AWS_SSH_KEY_NAME: "cluster-api-provider-aws-sigs-k8s-io"
  CONFORMANCE_CI_ARTIFACTS_KUBERNETES_VERSION: "v1.19.4"
  CONFORMANCE_WORKER_MACHINE_COUNT: "5"
  CONFORMANCE_CONTROL_PLANE_MACHINE_COUNT: "1"

# FIXME: verify if we need them
intervals:
  conformance/wait-control-plane: ["30m", "10s"]
  conformance/wait-worker-nodes: ["30m", "10s"]
  default/wait-controllers: ["3m", "10s"]
  default/wait-cluster: ["20m", "10s"]
  default/wait-control-plane: ["10m", "10s"]
  default/wait-worker-nodes: ["10m", "10s"]
  default/wait-delete-cluster: ["20m", "10s"]
  default/wait-machine-upgrade: ["20m", "10s"]
  default/wait-machine-status: ["20m", "10s"]
  node-drain/wait-deployment-available: ["3m", "10s"]
  node-drain/wait-control-plane: ["15m", "10s"]
